<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Vue3.x - Tag - Kisama&#39;s Blog</title>
        <link>https://moshimoshi.top/tags/vue3.x/</link>
        <description>Vue3.x - Tag - Kisama&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 26 Mar 2022 10:22:06 &#43;0000</lastBuildDate><atom:link href="https://moshimoshi.top/tags/vue3.x/" rel="self" type="application/rss+xml" /><item>
    <title>vite 项目中 debug vue3.x 源码</title>
    <link>https://moshimoshi.top/posts/vite-%E9%A1%B9%E7%9B%AE%E4%B8%AD-debug-vue3.x-%E6%BA%90%E7%A0%81/</link>
    <pubDate>Sat, 26 Mar 2022 10:22:06 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://moshimoshi.top/posts/vite-%E9%A1%B9%E7%9B%AE%E4%B8%AD-debug-vue3.x-%E6%BA%90%E7%A0%81/</guid>
    <description><![CDATA[之前在 vue-cli 创建的项目中调试 Vue2.x 源码时，只修改 package.json 中 module 字段对应的文件内容，对应的改动就会在浏览器刷新后体现出来，但这在由 vite 创建的 vue3.x 的项目中却行不通，原因有三：
 vue3.x 是一个 monorepo，源码被分成了好几部分 vite 的 pre-bundle 机制 vite 设置的浏览器缓存机制  后面两个好解决，只需分别将创建 viteServer 的 server.force 设置为 true（即将 package.json 里 scripts 中 &quot;dev&quot;: &quot;vite&quot; 改为 &quot;dev&quot;: &quot;vite --forece&quot;） 和浏览器控制台 network 栏激活 Disable cache 即可，这两步完成之后其实就可以在浏览器中调试源码了：
 修改 vue3.x package.json 中 module 字段对应的文件，以及其 dependencies 的 package.json 中 module 字段对应的文件 在编辑器中手动保存（不用任何改动，只在那个文件窗口下 cmd + s 即可）一下 vite.config.js 文件  这两步之后即可看到源码中的改动体现在浏览器中了，所以，这就完了？
当然不是，天知道每次改动一个文件之后还要再到另一个文件窗口中按一下 cmd + s 才能让浏览器刷新有多憨批，所以自动保存 vite.]]></description>
</item>
</channel>
</rss>
