<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>编码 - Tag - Kisama&#39;s Blog</title>
        <link>https://moshimoshi.top/tags/%E7%BC%96%E7%A0%81/</link>
        <description>编码 - Tag - Kisama&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 13 May 2021 14:40:32 &#43;0000</lastBuildDate><atom:link href="https://moshimoshi.top/tags/%E7%BC%96%E7%A0%81/" rel="self" type="application/rss+xml" /><item>
    <title>Unicode 笔记</title>
    <link>https://moshimoshi.top/posts/unicode-%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Thu, 13 May 2021 14:40:32 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://moshimoshi.top/posts/unicode-%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[什么是 Unicode：Unicode 是一个将现今世界大部分用于交流信息的字符（为组成文本的最小组成单元）映射成从 0 到 16 * 2^16 -1 的连续自然数集合的方案，为每个字符分配的自然数即成为该字符的 code point，通常是通过以十六进制表示的数字值（带有 &ldquo;U +&rdquo; 前缀）来引用它们。所有的字符被分为 17 个组（一共 1114112 个，每组 65536 个），大部分常用字符基本都被分到第一组（第一组被称为 Basic Multiple Plane），该组前 128 个字符与 ASCII 码对应的字符集一一对应。所以本质上讲，Unicode 与 ASCII 码将 128 个字符映射成 0 到 127 的自然数没有什么区别，只不过较 ASCII 码而言，Unicode 的编码方案要复杂得多得多。
  按照基本用途，1114112 个 code point 分为 7 个基本类型：
 Graphic：字母，标记，数字，标点，符号和空格 Format：不可见，但会影响邻近的字符；包括行、段落分隔符 Control：共 65 个（U+0000 到 U+001F 和 U+007F 到 U+009F 之间的 code point） Private-use：用于代表私用字符的 code point，这些字符的解释未由本标准规定，并且其使用可能由合作用户之间的专用协议确定，共 6400 个（U+E000 到 U+F8FF） Surrogate：用于 UTF-16 编码的代理，共 2048 个（U+D800 到 U+DBFF 和 U+DC00 到 U+DFFF 之间的 code point，前 1024 个称为前导代理，后 1024 个称为后尾代理） Noncharacter：Unicode 标准中永久保留供内部使用的 code point，共 66 个（U+FDD0 到 U+FDEF 中的 32 个加上 17 个组中每组的最后两个） Reserved：保留以供将来分配，但被限制用于信息交换    并非所有的 code point 都被分配给了某个字符的，只有 Graphic、Format、Control 和 Private-use 几个类型的 code point 有与之对应的字符；Surrogate 和 Noncharacter 两个类型的 code point 已经被分配，但分配的对象并不是字符；Reserved 保留以供将来分配，但被限制用于信息交换。所有未分配给特定字符的 code point 均被限制用于信息交换。]]></description>
</item>
</channel>
</rss>
